plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    var buildNumber = System.getenv("GITHUB_RUN_NUMBER") // for github actions people
    archivesName = "${project.archives_base_name}+${project.minecraft_version}" + (buildNumber != null ? "-build.${buildNumber}" : "")
}

repositories {
    maven { url = "https://mvn.devos.one/releases" } // Porting Lib
    maven { url = "https://mvn.devos.one/snapshots" } // Create & dependencies
    maven { url = "https://maven.tterrag.com/" } // Flywheel
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven" } // Forge Config API Port

    maven { // Fabric ASM for Porting Lib
        url = "https://jitpack.io/"
        content { includeGroupAndSubgroups("com.github") }
    }

    maven { url = "https://maven.blamejared.com" } // JEI
    maven { url = "https://maven.terraformersmc.com/releases" } // Mod Menu, EMI
}

fabricApi {
    configureDataGeneration()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}" // Fabric API
    modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}") // Create

    // Development QOL
    modLocalRuntime("com.terraformersmc:modmenu:${modmenu_version}") // Mod Menu
    modLocalRuntime("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}") // JEI
    modLocalRuntime("dev.emi:emi-fabric:${emi_version}") // EMI
}

processResources {
    Map<String, Object> properties = [
            "version": version,
            "minecraft_version": minecraft_version,
            "fabric_loader_version": fabric_loader_version,
            "fabric_api_version": fabric_api_version,
            "create_version": create_version
    ]

    inputs.properties(properties)

    filesMatching("fabric.mod.json") {
        expand properties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}